#PYTHON CODE




import pygame
import requests
import cv2
from datetime import datetime,timedelta
import sched, time
import mysql.connector
from datetime import datetime
import smtplib
sender="classroomjnnce@gmail.com"
revicerr="madhunaik2808@gmail.com"
s = smtplib.SMTP('smtp.gmail.com', 587)
s.starttls()
s.login("classroomjnnce@gmail.com", "mbhbeubahsbsbxof")
print("wdwdwdw")

mydb = mysql.connector.connect(
  host="localhost",
  user="root",
  password="",
  database="iot"
)

mycursor = mydb.cursor()

sql = "INSERT INTO info (time1, process1) VALUES (%s, %s)"

cap = cv2.VideoCapture(0)


human_cascade = cv2.CascadeClassifier('haarcascade_fullbody.xml')
face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')

pygame.init()
 
white = (255, 255, 255)
green = (0, 255, 0)
blue = (0, 0, 128)
red = (255, 0, 0)
 
X = 650
Y = 700
 
display_surface = pygame.display.set_mode((X, Y))

pygame.display.set_caption('Show Text')

font = pygame.font.Font('freesansbold.ttf', 32)
 
text = font.render('Classroom Automation', True, green, blue)
 
textRect = text.get_rect()

textRect.center = (X//2, 50)

text2 = font.render('Sensor data', True, blue, green)
 
textRect2 = text2.get_rect()

textRect2.center = (X//2, 140)

text3 = font.render('Temperature', True, blue)
 
textRect3 = text3.get_rect()

textRect3.center = (150, 200)

text4 = font.render('Motion detection', True, blue)
 
textRect4 = text4.get_rect()

textRect4.center = (450, 200)

text5 = font.render('0 F', True, red)
 
textRect5 = text5.get_rect()

textRect5.center = (150, 250)

text6 = font.render('Not detected', True, red)
 
textRect6 = text6.get_rect()

textRect6.center = (450, 250)

text7 = font.render('Lights : OFF', True, red,blue)
 
textRect7 = text7.get_rect()

textRect7.center = (X//2, 300)

text8 = font.render('Fan : OFF', True, red,blue)
 
textRect8 = text8.get_rect()

textRect8.center = (X//2, 350)

text9 = font.render('Window : CLOSE', True, red,blue)
 
textRect9 = text9.get_rect()

textRect9.center = (X//2, 400)
url='http://192.168.43.213/'
human_detected=0
now = datetime.now()
now_plus_1 = now + timedelta(minutes = 1)
now_plus_2 = now + timedelta(minutes = 2)

while True:
    message='''\\
     ... From: classroomjnnce@gmail.com
     ... Subject: info'...
     ...
     ...  '''
    val=0
    now = datetime.now()
    
    display_surface.fill(white)
    display_surface.blit(text, textRect)
    display_surface.blit(text2, textRect2)
    display_surface.blit(text3, textRect3)
    display_surface.blit(text4, textRect4)
    display_surface.blit(text5, textRect5)
    display_surface.blit(text6, textRect6)
    display_surface.blit(text7, textRect7)
    display_surface.blit(text8, textRect8)
    display_surface.blit(text9, textRect9)
    x = requests.get(url)
    x=x.text
    x=x.split(",")
    text5 = font.render(x[0]+' F', True, red)
    text8 = font.render('Fan : OFF', True, red,blue)
    now = datetime.now()
    val = (now, x[0]+' F')
    mycursor.execute(sql, val)
    mydb.commit()
    #print(mycursor.rowcount, "record inserted.")
    if(x[1]=="0"):
        text6 = font.render('Not detected', True, red)
    elif(x[1]=="1"):
        text6 = font.render('Motion detected', True, red)

    if(x[2]=="0"):
        text8 = font.render('Fan : OFF', True, red,blue)
        message+="Fan : OFF,"
        now = datetime.now()
        val = (now, "Fan : OFF")
        mycursor.execute(sql, val)
        mydb.commit()
        #print(mycursor.rowcount, "record inserted.")
    elif(x[2]=="1"):
        message+="Fan : ON,"
        text8 = font.render('Fan : ON', True, red,blue)
        now = datetime.now()
        val = (now, "Fan : ON")
        mycursor.execute(sql, val)
        mydb.commit()
        #print(mycursor.rowcount, "record inserted.")

    if(x[3]=="0"):
        text7 = font.render('Lights : OFF', True, red,blue)
        now = datetime.now()
        val = (now, "Lights : OFF")
        mycursor.execute(sql, val)
        mydb.commit()
        #print(mycursor.rowcount, "record inserted.")
    elif(x[3]=="1"):
        text7 = font.render('Lights : ON', True, red,blue)
        now = datetime.now()
        message+="Lights : ON,"
        val = (now, "Lights : ON")
        mycursor.execute(sql, val)
        mydb.commit()
        #print(mycursor.rowcount, "record inserted.")

    if(x[4]=="0"):
        message+="Window : CLOSE"
        text9 = font.render('Window : CLOSE', True, red,blue)
        val=1
        now = datetime.now()
        val = (now, "Window : CLOSE")
        mycursor.execute(sql, val)
        mydb.commit()
        #print(mycursor.rowcount, "record inserted.")
    elif(x[4]=="1"):
        message+="Window : OPEN"
        text9 = font.render('Window : OPEN', True, red,blue)
        now = datetime.now()
        val = (now, "Window : OPEN")
        mycursor.execute(sql, val)
        mydb.commit()
        #print(mycursor.rowcount, "record inserted.")

    
    ret, frame = cap.read()

    # Our operations on the frame come here
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    humans = human_cascade.detectMultiScale(gray, 1.9, 1)
    human_detected=0
    # Display the resulting frame
    for (x,y,w,h) in humans:
        human_detected=1
        cv2.rectangle(frame,(x,y),(x+w,y+h),(255,0,0),2)
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)
  
    for (x,y,w,h) in faces:
        human_detected=1
        # To draw a rectangle in a face 
        cv2.rectangle(frame,(x,y),(x+w,y+h),(255,255,0),2) 
        roi_gray = gray[y:y+h, x:x+w]
        roi_color = frame[y:y+h, x:x+w]
    cv2.imwrite("1.jpg", frame)
    image = pygame.image.load("1.jpg")
    image=pygame.transform.scale(image, (300, 200)) 
    display_surface.blit(image, (150, 450))
    if human_detected==1:
        x = requests.get(url+"lightson")
        now = datetime.now()
        val = (now, "lights ON")
        mycursor.execute(sql, val)
        mydb.commit()
        #print(mycursor.rowcount, "record inserted.")
    if now>now_plus_1:
        if human_detected==0:
            now_plus_1 = now + timedelta(minutes = 1)
            now = datetime.now()
            val = (now, "lightsoff")
            mycursor.execute(sql, val)
            mydb.commit()
            #print(mycursor.rowcount, "record inserted.")
            x = requests.get(url+"lightsoff")
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            quit()
    if now>now_plus_2:
        print(message)
        now_plus_2 = now + timedelta(minutes = 2)
        s.sendmail(sender,revicerr,message)
    pygame.display.update()
s.quit()
